This code demonstrates how to use the `ast` module in Python to parse an arithmetic expression, modify the abstract syntax tree (AST) representation of the expression, and then evaluate the modified expression. 

The initial expression "2 * (3 - 1) + 2 * 5" is parsed using `ast.parse()` with mode 'eval', and the resulting AST is printed and compiled into a code object. The expression is then evaluated, resulting in the value 14.

Next, the AST is modified by changing the value 5 to 6 in the expression. The modified AST is compiled into a new code object and evaluated, resulting in the value 16.

This code showcases the ability to manipulate and evaluate AST representations of expressions in Python.