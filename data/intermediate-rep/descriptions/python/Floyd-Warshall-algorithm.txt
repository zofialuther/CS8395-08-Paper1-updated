This Python code implements the Floyd-Warshall algorithm for finding the shortest paths between all pairs of vertices in a weighted graph. It takes the number of vertices and a list of edges with their weights as input and computes the shortest distances and paths between all pairs of vertices. The algorithm uses dynamic programming to efficiently calculate the shortest paths and distances. Finally, it prints the shortest distances and paths for all pairs of vertices in the graph. The example input provided in the code demonstrates how the function can be used to find the shortest paths and distances for a graph with 4 vertices and specific edge weights.