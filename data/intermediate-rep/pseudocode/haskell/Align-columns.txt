```
FUNCTION main
    IMPORT Data.List (unfoldr, transpose)
    IMPORT Control.Arrow (second)

    dat = "Given$a$text$file$of$many$lines,$where$fields$within$a$line$\n" ++
          "are$delineated$by$a$single$'dollar'$character,$write$a$program\n" ++
          "that$aligns$each$column$of$fields$by$ensuring$that$words$in$each$\n" ++
          "column$are$separated$by$at$least$one$space.\n" ++
          "Further,$allow$for$each$word$in$a$column$to$be$either$left$\n" ++
          "justified,$right$justified,$or$center$justified$within$its$column.\n"

    brkdwn = takeWhile (not . null) . unfoldr (Just . second (drop 1) . span ('$' /=))

    FUNCTION format
        PARAMETERS j, ls
        rows = map brkdwn $ lines ls
        colw = map (maximum . map length) . transpose $ rows
        RETURN map (unwords . zipWith align colw) rows

    FUNCTION align
        PARAMETERS cw, w
        dl = cw - length w
        l = dl `div` 2
        r = dl - l
        IF j = 'c' THEN
            RETURN replicate l ' ' ++ w ++ replicate r ' '
        ELSE IF j = 'r' THEN
            RETURN replicate dl ' ' ++ w
        ELSE IF j = 'l' THEN
            RETURN w ++ replicate dl ' '
        END IF
    END FUNCTION

END FUNCTION
```