1. Import required modules:
   - import Data.List (unfoldr)
   - import Data.Tuple (swap)
   - import Data.Bool (bool)

2. Define the harshads function:
   - harshads :: [Int]
   - harshads = filter ((0 ==) . (rem <*> digitSum)) [1 ..]

3. Define the digitSum function:
   - digitSum :: Int -> Int
   - digitSum = sum . unfoldr ((bool Nothing . Just . swap . flip quotRem 10) <*> (0 <))

4. Define the main function:
   - main :: IO ()
   - main = mapM_ print $ [take 20, take 1 . dropWhile (<= 1000)] <*> [harshads]