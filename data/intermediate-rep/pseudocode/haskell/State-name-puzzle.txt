```
FUNCTION puzzle(states)
    statePairs = []
    sortedStates = sort(states)
    uniqueStates = nub(sortedStates)
    for each a in uniqueStates
        for each b in uniqueStates
            if a != b
                statePairs.append((pkey(a + b), (a, b)))
    groupedPairs = groupBy((==) `on` fst, sortBy(compare `on` fst, statePairs))
    validPairs = filter((>1) . length, groupedPairs)
    result = []
    for each group in validPairs
        for each pair in group
            if isValid(pair)
                result.append(pair)
    return result
END FUNCTION

FUNCTION pkey(s)
    return sort(filter(isLetter, map(toLower, s)))
END FUNCTION

FUNCTION isValid(pair)
    (a0, a1) = pair[0]
    (b0, b1) = pair[1]
    return a0 != b0 && a0 != b1 && a1 != b0 && a1 != b1
END FUNCTION

FUNCTION pairs(list)
    result = []
    FOR i = 0 to length(list) - 1
        FOR j = i + 1 to length(list)
            result.append((list[i], list[j]))
    RETURN result
END FUNCTION

states = [
    "Alabama", "Alaska", "Arizona", "Arkansas", "California", "Colorado", "Connecticut", 
    "Delaware", "Florida", "Georgia", "Hawaii", "Idaho", "Illinois", "Indiana", "Iowa", 
    "Kansas", "Kentucky", "Louisiana", "Maine", "Maryland", "Massachusetts", "Michigan", 
    "Minnesota", "Mississippi", "Missouri", "Montana", "Nebraska", "Nevada", "New Hampshire", 
    "New Jersey", "New Mexico", "New York", "North Carolina", "North Dakota", "Ohio", "Oklahoma", 
    "Oregon", "Pennsylvania", "Rhode Island", "South Carolina", "South Dakota", "Tennessee", 
    "Texas", "Utah", "Vermont", "Virginia", "Washington", "West Virginia", "Wisconsin", "Wyoming"
]

fakeStates = ["New Kory", "Wen Kory", "York New", "Kory New", "New Kory"]

puzzle(states + fakeStates)
```