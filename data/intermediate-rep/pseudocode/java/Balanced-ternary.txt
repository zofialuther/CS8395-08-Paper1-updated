```
function main(args)
    a = new BTernary("+-0++0+")
    b = new BTernary(-436)
    c = new BTernary("+-++-")
    
    print("a=" + a.intValue())
    print("b=" + b.intValue())
    print("c=" + c.intValue())
    print()
    
    result = a.mul(b.sub(c))
    
    print("result= " + result + " " + result.intValue())
end

class BTernary
    value = ""
    
    function BTernary(s)
        i = 0
        while s.charAt(i) == '0'
            i++
        end
        value = s.substring(i)
    end
    
    function BTernary(v)
        value = ""
        value = convertToBT(v)
    end
    
    function convertToBT(v)
        if v < 0
            return flip(convertToBT(-v))
        end
        if v == 0
            return ""
        end
        rem = mod3(v)
        if rem == 0
            return convertToBT(v/3) + "0"
        end
        if rem == 1
            return convertToBT(v/3) + "+"
        end
        if rem == 2
            return convertToBT((v+1)/3) + "-"
        end
        return "You can't see me"
    end
    
    function flip(s)
        flip = ""
        for i = 0 to s.length() - 1
            if s.charAt(i) == '+'
                flip += '-'
            else if s.charAt(i) == '-'
                flip += '+'
            else
                flip += '0'
            end
        end
        return flip
    end
    
    function mod3(v)
        if v > 0
            return v%3
        end
        v = v%3
        return (v+3)%3
    end
    
    function intValue()
        sum = 0
        s = value
        for i = 0 to s.length() - 1
            c = s.charAt(s.length() - i - 1)
            dig = 0
            if c == '+'
                dig = 1
            else if c == '-'
                dig = -1
            end
            sum += dig * 3^i
        end
        return sum
    end
    
    function add(that)
        a = value
        b = that.value
        
        longer = a.length() > b.length() ? a : b
        shorter = a.length() > b.length() ? b : a
        
        while shorter.length() < longer.length()
            shorter = "0" + shorter
        end
        
        a = longer
        b = shorter
        
        carry = '0'
        sum = ""
        for i = 0 to a.length() - 1
            place = a.length() - i - 1
            digisum = addDigits(a.charAt(place), b.charAt(place), carry)
            if digisum.length() != 1
                carry = digisum.charAt(0)
            else
                carry = '0'
            end
            sum = digisum.charAt(digisum.length() - 1) + sum
        end
        sum = carry + sum
        
        return new BTernary(sum)
    end
end
```