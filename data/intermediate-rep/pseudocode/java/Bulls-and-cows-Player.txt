```
class GameNumber extends AbstractGuessNumber {

    GameNumber() {
        super(4);
        defineNumber();
    }

    isGuess(digits) {
        return (digits != null && isUnique(digits) && isAllDigits(digits));
    }

    isAllDigits(array) {
        for (i = 0; i < array.length; i++) {
            digit = (char) (array[i] + '0');

            if (!Character.isDigit(digit)) {
                return false;
            }
        }
        return true;
    }

    isUnique(array) {
        for (j = 0; j < array.length; j++) {
            a = array[j];

            for (i = 0; i < j; i++) {
                if (a == array[i]) {
                    return false;
                }
            }
        }
        return true;
    }

    parseDigits(number, length) {
        arr = new int[length];
        temp = number;
        for (i = length - 1; i >= 0; i--) {
            arr[i] = temp % 10;
            temp /= 10;
        }
        return arr;
    }

    defineNumber() {
        arr = generateRandom();

        for (i = 0; i < getLength(); i++) {
            digits[i] = arr[i];
        }
    }

    generateRandom() {
        do {
            random = new Random();
            number = random.nextInt(9877) + 123;
            arr = parseDigits(number, getLength());
        } while (!isGuess(arr));
        return arr;
    }

    toString() {
        return Arrays.toString(digits);
    }
}
```