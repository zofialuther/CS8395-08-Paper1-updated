FUNCTION chineseRemainder(n, a)
    prod = REDUCE(n, 1, (i, j) -> i * j)
    p = 0
    sm = 0
    FOR i = 0 TO n.length
        p = prod / n[i]
        sm += a[i] * mulInv(p, n[i]) * p
    END FOR
    RETURN sm % prod
END FUNCTION

FUNCTION mulInv(a, b)
    b0 = b
    x0 = 0
    x1 = 1
    IF b == 1
        RETURN 1
    END IF
    WHILE a > 1
        q = a / b
        amb = a % b
        a = b
        b = amb
        xqx = x1 - q * x0
        x1 = x0
        x0 = xqx
    END WHILE
    IF x1 < 0
        x1 += b0
    END IF
    RETURN x1
END FUNCTION

FUNCTION main()
    n = {3, 5, 7}
    a = {2, 3, 2}
    PRINT(chineseRemainder(n, a))
END FUNCTION