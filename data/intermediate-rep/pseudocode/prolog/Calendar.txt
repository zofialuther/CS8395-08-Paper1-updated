```
FUNCTION write_calendar(Year)
    month_x3_format(Year, 1, 2, 3, F1_3)
    month_x3_format(Year, 4, 5, 6, F4_6)
    month_x3_format(Year, 7, 8, 9, F7_9)
    month_x3_format(Year, 10, 11, 12, F10_12)

    FORMAT('

                                      ~w

            January                  February                   March
      Su Mo Tu We Th Fr Sa     Su Mo Tu We Th Fr Sa     Su Mo Tu We Th Fr Sa
~w

             April                     May                      June
      Su Mo Tu We Th Fr Sa     Su Mo Tu We Th Fr Sa     Su Mo Tu We Th Fr Sa
~w

              July                    August                  September
      Su Mo Tu We Th Fr Sa     Su Mo Tu We Th Fr Sa     Su Mo Tu We Th Fr Sa
~w

            October                  November                 December
      Su Mo Tu We Th Fr Sa     Su Mo Tu We Th Fr Sa     Su Mo Tu We Th Fr Sa
~w   
', [Year, F1_3, F4_6, F7_9, F10_12])

    RETURN

FUNCTION month_x3_format(Year, M1, M2, M3, F)
    calc_month_rows(Year, M1, M1r)
    calc_month_rows(Year, M2, M2r)
    calc_month_rows(Year, M3, M3r)
    month_x3_format(M1r, M2r, M3r, F)

FUNCTION month_x3_format(M1, M2, M3, F)
    IF maplist(=('   '), M1) AND maplist(=('   '), M2) AND maplist(=('   '), M3)
        RETURN ''
    ELSE
        month_format('      ', M1, M1r, F1)
        month_format(F1, M2, M2r, F2)
        month_format(F2, M3, M3r, F3)
        F4 = CONCATENATE(F3, '\n')
        Fr = month_x3_format(M1r, M2r, M3r)
        RETURN CONCATENATE(F4, Fr)

FUNCTION month_format(Orig, [Su, Mo, Tu, We, Th, Fr, Sa | R], R, F)
    Formatted = maplist(day_format, [Su, Mo, Tu, We, Th, Fr, Sa])
    F2 = FORMAT('~w~w~w~w~w~w~w    ', Formatted)
    F = CONCATENATE(Orig, F2)

FUNCTION day_format('   ', '   ')
    RETURN
FUNCTION day_format(D, F)
    IF D < 10 THEN
        F = FORMAT('~w  ', D)
    ELSE
        F = FORMAT('~w ', D)

FUNCTION calc_month_rows(Year, Month, Result)
    LENGTH(Result, 42)
    month_days(Month, Year, DaysInMonth)
    day_of_the_week(date(Year, Month, 1), FirstWeekDay)
    day_offset(FirstWeekDay, Offset)
    day_print_map(DaysInMonth, Offset, Result)

FUNCTION day_print_map(DaysInMonth, 0, [1 | R])
    day_print_map2(DaysInMonth, 2, R)
FUNCTION day_print_map(DaysInMonth, Offset, ['   ' | R])
    IF dif(Offset, 0) THEN
        NewOffset = Offset + 1
        day_print_map(DaysInMonth, NewOffset, R)

FUNCTION day_print_map2(D, D, [D | R])
    day_print_map(R)
FUNCTION day_print_map2(D, N, [N | R])
    IF dif(D, N) THEN
        N1 = N + 1
        day_print_map2(D, N1, R)

FUNCTION month_days(2, Year, Days)
    IF is_leap_year(Year) THEN
        Days = 29
    ELSE
        Days = 28
FUNCTION month_days(Month, _, Days)
    IF dif(Month, 2) THEN
        Days = nth1(Month, [31, _, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31])

FUNCTION day_offset(D, D)
    IF dif(D, 7) THEN
        RETURN D
FUNCTION day_offset(7, 0)
    RETURN 0

FUNCTION is_leap_year(Year)
    IF 0 is Year mod 100 THEN
        IF 0 is Year mod 400 THEN
            RETURN TRUE
        ELSE
            RETURN FALSE
    ELSE
        IF 0 is Year mod 4 THEN
            RETURN TRUE
        ELSE
            RETURN FALSE
```