```
frequency(File) :-
    read_file_to_codes(File, Code, []),
    include(my_code_type, Code, LstCharCode),
    maplist(my_upcase, LstCharCode, LstChar),
    msort(LstChar, SortLstChar),
    packList(SortLstChar, Freq),
    maplist(my_write, Freq).

my_write([Num, Atom]) :-
    swritef(A, '%3r', [Num]),
    writef('Number of %w :%w\n', [Atom, A]).

my_code_type(Code) :-
    code_type(Code, alpha).

my_upcase(CharCode, UpChar) :-
    char_code(Atom, CharCode),
    upcase_atom(Atom, UpChar).

packList([],[]).
packList([X],[[1,X]]) :- !.
packList([X|Rest],[XRun|Packed]):-
    run(X,Rest, XRun,RRest),
    packList(RRest,Packed).

run(Var,[],[1,Var],[]).
run(Var,[Var|LRest],[N1, Var],RRest):-
    N #> 0,
    N1 #= N + 1,
    run(Var,LRest,[N, Var],RRest).
run(Var,[Other|RRest], [1,Var],[Other|RRest]):-
    dif(Var,Other).
```