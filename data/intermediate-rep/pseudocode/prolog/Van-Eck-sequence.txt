```
function van_eck_init(v(0, 0, _assoc)):
    empty_assoc(_assoc)

function van_eck_next(v(Index, Last_term, Last_pos), v(Index1, Next_term, Last_pos1)):
    if get_assoc(Last_term, Last_pos, V):
        Next_term = Index - V
    else:
        Next_term = 0
    Index1 = Index + 1
    put_assoc(Last_term, Last_pos, Index, Last_pos1)

function van_eck_sequence(N, Seq):
    van_eck_init(V)
    van_eck_sequence(N, V, Seq)

function van_eck_sequence(0, _, []):
    exit
function van_eck_sequence(N, V, [Term|Rest]):
    V = v(_, Term, _)
    van_eck_next(V, V1)
    N1 = N - 1
    van_eck_sequence(N1, V1, Rest)

function write_list(From, To, _, _):
    if To < From:
        exit
    exit
function write_list(From, To, N, []):
    exit
function write_list(From, To, N, [_|Rest]):
    if From > N:
        N1 = N + 1
        write_list(From, To, N1, Rest)
    else:
        writef('%t ', [E])
        F1 = From + 1
        N1 = N + 1
        write_list(F1, To, N1, Rest)

function write_list(From, To, List):
    write_list(From, To, 1, List)
    nl

function main():
    van_eck_sequence(1000, Seq)
    writeln('First 10 terms of the Van Eck sequence:')
    write_list(1, 10, Seq)
    writeln('Terms 991 to 1000 of the Van Eck sequence:')
    write_list(991, 1000, Seq)
```