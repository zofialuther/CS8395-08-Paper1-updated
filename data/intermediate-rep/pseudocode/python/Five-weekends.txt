```
FUNCTION five_weekends_per_month(start: date = START, stop: date = STOP) -> list[date]:
    current_date = start
    last_month = weekend_days = 0
    five_weekends = []
    WHILE current_date < stop DO
        IF current_date.month != last_month THEN
            IF weekend_days >= 15 THEN
                five_weekends.append(current_date - DAY)
            END IF
            weekend_days = 0
            last_month = current_date.month
        END IF
        IF current_date.weekday() in WEEKEND THEN
            weekend_days += 1
        END IF
        current_date += DAY
    END WHILE
    RETURN five_weekends

dates = five_weekends_per_month()
indent = '  '
PRINT "There are " + len(dates) + " months of which the first and last five are:"
PRINT (indent + '\n' + indent).join(d.strftime(FMT) for d in dates[:5])
PRINT indent + '...'
PRINT indent + (('\n' + indent).join(d.strftime(FMT) for d in dates[-5:])

years_without_five_weekends_months = (STOP.year - START.year - len({d.year for d in dates}))
PRINT "There are " + years_without_five_weekends_months + " years in the range that do not have months with five weekends"
```