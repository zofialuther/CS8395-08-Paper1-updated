```
function Dijkstra(Graph, source)
    infinity = float('infinity')
    n = length(Graph)
    dist = [infinity]*n
    previous = [infinity]*n
    dist[source] = 0
    Q = list(range(n))
    while Q is not empty
        u = min(Q, key=lambda n:dist[n])
        remove u from Q
        if dist[u] is equal to infinity
            break
        for v in range(n)
            if Graph[u][v] is not 0 and v is in Q
                alt = dist[u] + Graph[u][v]
                if alt < dist[v]
                    dist[v] = alt
                    previous[v] = u
    return dist, previous

function display_solution(predecessor)
    cell = length(predecessor) - 1
    while cell is not 0
        print cell
        cell = predecessor[cell]
    print 0
```