```
function _try_composite(a, d, n, s):
    if pow(a, d, n) is equal to 1 then
        return False
    for i in range(s) do
        if pow(a, 2^i * d, n) is equal to n-1 then
            return False
    end for
    return True

function is_prime(n, _precision_for_huge_n=16):
    if n is in _known_primes then
        return True
    if any((n % p) is equal to 0 for p in _known_primes) or n is equal to 0 or n is equal to 1 then
        return False
    d, s = n - 1, 0
    while not d % 2 do
        d, s = d >> 1, s + 1
    end while
    if n < 1373653 then
        return not any(_try_composite(a, d, n, s) for a in (2, 3))
    end if
    if n < 25326001 then
        return not any(_try_composite(a, d, n, s) for a in (2, 3, 5))
    end if
    if n < 118670087467 then
        if n is equal to 3215031751 then
            return False
        end if
        return not any(_try_composite(a, d, n, s) for a in (2, 3, 5, 7))
    end if
    if n < 2152302898747 then
        return not any(_try_composite(a, d, n, s) for a in (2, 3, 5, 7, 11))
    end if
    if n < 3474749660383 then
        return not any(_try_composite(a, d, n, s) for a in (2, 3, 5, 7, 11, 13))
    end if
    if n < 341550071728321 then
        return not any(_try_composite(a, d, n, s) for a in (2, 3, 5, 7, 11, 13, 17))
    end if
    return not any(_try_composite(a, d, n, s) for a in _known_primes[:_precision_for_huge_n])

_known_primes = [2, 3]
_known_primes += [x for x in range(5, 1000, 2) if is_prime(x)]
```