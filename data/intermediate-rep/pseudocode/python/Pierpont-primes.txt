```
import random

function is_Prime(n):
    if n is not an integer:
        return False
    n = integer(n)
    if n is 0 or n is 1 or n is 4 or n is 6 or n is 8 or n is 9:
        return False
    if n is 2 or n is 3 or n is 5 or n is 7:
        return True
    s = 0
    d = n - 1
    while d % 2 is 0:
        d >>= 1
        s += 1
    assert(2^s * d == n - 1)

    function trial_composite(a):
        if (a^d) % n is 1:
            return False
        for i in range(s):
            if (a^(2^i * d)) % n is n - 1:
                return False
        return True

    for i in range(8):#number of trials
        a = random integer between 2 and n
        if trial_composite(a):
            return False
    return True

function pierpont(ulim, vlim, first):
    p = 0
    p2 = 1
    p3 = 1
    pp = []
    for v in range(vlim):
        for u in range(ulim):
            p = p2 * p3
            if first:
                p = p + 1
            else:
                p = p - 1
            if is_Prime(p):
                pp.append(p)
            p2 = p2 * 2
        p3 = p3 * 3
        p2 = 1
    pp.sort()
    return pp

function main():
    print "First 50 Pierpont primes of the first kind:"
    pp = pierpont(120, 80, True)
    for i in range(50):
        print "%8d " % pp[i]
        if (i - 9) % 10 is 0:
            print
    print "First 50 Pierpont primes of the second kind:"
    pp2 = pierpont(120, 80, False)
    for i in range(50):
        print "%8d " % pp2[i]
        if (i - 9) % 10 is 0:
            print
    print "250th Pierpont prime of the first kind:", pp[249]
    print "250th Pierpont prime of the second kind:", pp2[249]

main()
```