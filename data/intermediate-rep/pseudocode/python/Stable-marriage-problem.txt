Begin
  import copy
  guyprefers = {
   'abe':  ['abi', 'eve', 'cath', 'ivy', 'jan', 'dee', 'fay', 'bea', 'hope', 'gay'],
   'bob':  ['cath', 'hope', 'abi', 'dee', 'eve', 'fay', 'bea', 'jan', 'ivy', 'gay'],
   'col':  ['hope', 'eve', 'abi', 'dee', 'bea', 'fay', 'ivy', 'gay', 'cath', 'jan'],
   'dan':  ['ivy', 'fay', 'dee', 'gay', 'hope', 'eve', 'jan', 'bea', 'cath', 'abi'],
   'ed':   ['jan', 'dee', 'bea', 'cath', 'fay', 'eve', 'abi', 'ivy', 'hope', 'gay'],
   'fred': ['bea', 'abi', 'dee', 'gay', 'eve', 'ivy', 'cath', 'jan', 'hope', 'fay'],
   'gav':  ['gay', 'eve', 'ivy', 'bea', 'cath', 'abi', 'dee', 'hope', 'jan', 'fay'],
   'hal':  ['abi', 'eve', 'hope', 'fay', 'ivy', 'cath', 'jan', 'bea', 'gay', 'dee'],
   'ian':  ['hope', 'cath', 'dee', 'gay', 'bea', 'abi', 'fay', 'ivy', 'jan', 'eve'],
   'jon':  ['abi', 'fay', 'jan', 'gay', 'eve', 'bea', 'dee', 'cath', 'ivy', 'hope']}
  galprefers = {
   'abi':  ['bob', 'fred', 'jon', 'gav', 'ian', 'abe', 'dan', 'ed', 'col', 'hal'],
   'bea':  ['bob', 'abe', 'col', 'fred', 'gav', 'dan', 'ian', 'ed', 'jon', 'hal'],
   'cath': ['fred', 'bob', 'ed', 'gav', 'hal', 'col', 'ian', 'abe', 'dan', 'jon'],
   'dee':  ['fred', 'jon', 'col', 'abe', 'ian', 'hal', 'gav', 'dan', 'bob', 'ed'],
   'eve':  ['jon', 'hal', 'fred', 'dan', 'abe', 'gav', 'col', 'ed', 'ian', 'bob'],
   'fay':  ['bob', 'abe', 'ed', 'ian', 'jon', 'dan', 'fred', 'gav', 'col', 'hal'],
   'gay':  ['jon', 'gav', 'hal', 'fred', 'bob', 'abe', 'col', 'ed', 'dan', 'ian'],
   'hope': ['gav', 'jon', 'bob', 'abe', 'ian', 'dan', 'hal', 'ed', 'col', 'fred'],
   'ivy':  ['ian', 'col', 'hal', 'gav', 'fred', 'bob', 'abe', 'ed', 'jon', 'dan'],
   'jan':  ['ed', 'hal', 'gav', 'abe', 'bob', 'jon', 'col', 'ian', 'fred', 'dan']}
  guys = sorted(guyprefers.keys())
  gals = sorted(galprefers.keys())

  Function check(engaged)
    inverseengaged = dict((v,k) for k,v in engaged.items())
    For each she, he in engaged.items()
      shelikes = galprefers[she]
      shelikesbetter = shelikes[:shelikes.index(he)]
      helikes = guyprefers[he]
      helikesbetter = helikes[:helikes.index(she)]
      For each guy in shelikesbetter
        guysgirl = inverseengaged[guy]
        guylikes = guyprefers[guy]
        If guylikes.index(guysgirl) > guylikes.index(she) Then
          Print "%s and %s like each other better than their present partners: %s and %s, respectively" % (she, guy, he, guysgirl)
          Return False
      End For
      For each gal in helikesbetter
        girlsguy = engaged[gal]
        gallikes = galprefers[gal]
        If gallikes.index(girlsguy) > gallikes.index(he) Then
          Print "%s and %s like each other better than their present partners: %s and %s, respectively" % (he, gal, she, girlsguy)
          Return False
      End For
    End For
    Return True
  End Function

  Function matchmaker()
    guysfree = copy of guys
    engaged  = {}
    guyprefers2 = deepcopy(guyprefers)
    galprefers2 = deepcopy(galprefers)
    While guysfree not empty
      guy = guysfree.pop(0)
      guyslist = guyprefers2[guy]
      gal = guyslist.pop(0)
      fiance = engaged.get(gal)
      If not fiance Then
        engaged[gal] = guy
        Print "%s and %s" % (guy, gal)
      Else
        galslist = galprefers2[gal]
        If galslist.index(fiance) > galslist.index(guy) Then
          engaged[gal] = guy
          Print "%s dumped %s for %s" % (gal, fiance, guy)
          If guyprefers2[fiance] not empty Then
            guysfree.append(fiance)
          End If
        Else
          If guyslist not empty Then
            guysfree.append(guy)
          End If
        End If
      End If
    End While
    Return engaged
  End Function

  Print '\nEngagements:'
  engaged = matchmaker()

  Print '\nCouples:'
  Print '  ' + ',\n  '.join('%s is engaged to %s' % couple for couple in sorted(engaged.items()))
  Print ()
  Print 'Engagement stability check PASSED' if check(engaged) else 'Engagement stability check FAILED'

  Print '\n\nSwapping two fiances to introduce an error'
  engaged[gals[0]], engaged[gals[1]] = engaged[gals[1]], engaged[gals[0]]
  For each gal in gals[:2]
    Print '%s is now engaged to %s' % (gal, engaged[gal])
  End For
  Print ()
  Print 'Engagement stability check PASSED' if check(engaged) else 'Engagement stability check FAILED'
End